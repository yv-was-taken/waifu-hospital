{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { setAuthToken } from '../../utils/setAuthToken';\nimport { setAlert } from '../alerts/alertSlice';\n\n// Load user\nexport const loadUser = createAsyncThunk('auth/loadUser', async (_, {\n  rejectWithValue\n}) => {\n  try {\n    if (localStorage.token) {\n      setAuthToken(localStorage.token);\n    }\n    const res = await axios.get('/api/users/profile');\n    return res.data;\n  } catch (err) {\n    localStorage.removeItem('token');\n    return rejectWithValue(err.response.data.msg || 'Failed to load user');\n  }\n});\n\n// Register user\nexport const register = createAsyncThunk('auth/register', async (formData, {\n  dispatch,\n  rejectWithValue\n}) => {\n  try {\n    const res = await axios.post('/api/users/register', formData);\n    dispatch(setAlert({\n      msg: 'Registration successful! You are now logged in.',\n      type: 'success'\n    }));\n    return res.data;\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert({\n        msg: error.msg,\n        type: 'error'\n      })));\n    }\n    return rejectWithValue(err.response.data.msg || 'Registration failed');\n  }\n});\n\n// Login user\nexport const login = createAsyncThunk('auth/login', async (formData, {\n  dispatch,\n  rejectWithValue\n}) => {\n  try {\n    const res = await axios.post('/api/users/login', formData);\n    dispatch(setAlert({\n      msg: 'Login successful!',\n      type: 'success'\n    }));\n    return res.data;\n  } catch (err) {\n    dispatch(setAlert({\n      msg: err.response.data.msg || 'Invalid credentials',\n      type: 'error'\n    }));\n    return rejectWithValue(err.response.data.msg || 'Login failed');\n  }\n});\n\n// Update profile\nexport const updateProfile = createAsyncThunk('auth/updateProfile', async (formData, {\n  dispatch,\n  rejectWithValue\n}) => {\n  try {\n    const res = await axios.put('/api/users/profile', formData);\n    dispatch(setAlert({\n      msg: 'Profile updated successfully!',\n      type: 'success'\n    }));\n    return res.data;\n  } catch (err) {\n    dispatch(setAlert({\n      msg: err.response.data.msg || 'Failed to update profile',\n      type: 'error'\n    }));\n    return rejectWithValue(err.response.data.msg || 'Update failed');\n  }\n});\n\n// Initial state\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: null,\n  loading: true,\n  user: null,\n  error: null\n};\n\n// Slice\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    logout: state => {\n      localStorage.removeItem('token');\n      state.token = null;\n      state.isAuthenticated = false;\n      state.loading = false;\n      state.user = null;\n    },\n    clearError: state => {\n      state.error = null;\n    }\n  },\n  extraReducers: builder => {\n    builder\n    // Load user\n    .addCase(loadUser.pending, state => {\n      state.loading = true;\n    }).addCase(loadUser.fulfilled, (state, action) => {\n      state.isAuthenticated = true;\n      state.loading = false;\n      state.user = action.payload;\n    }).addCase(loadUser.rejected, (state, action) => {\n      state.token = null;\n      state.isAuthenticated = false;\n      state.loading = false;\n      state.user = null;\n      state.error = action.payload;\n    })\n\n    // Register\n    .addCase(register.pending, state => {\n      state.loading = true;\n    }).addCase(register.fulfilled, (state, action) => {\n      state.token = action.payload.token;\n      state.isAuthenticated = true;\n      state.loading = false;\n      state.user = action.payload.user;\n      localStorage.setItem('token', action.payload.token);\n    }).addCase(register.rejected, (state, action) => {\n      state.token = null;\n      state.isAuthenticated = false;\n      state.loading = false;\n      state.error = action.payload;\n    })\n\n    // Login\n    .addCase(login.pending, state => {\n      state.loading = true;\n    }).addCase(login.fulfilled, (state, action) => {\n      state.token = action.payload.token;\n      state.isAuthenticated = true;\n      state.loading = false;\n      localStorage.setItem('token', action.payload.token);\n    }).addCase(login.rejected, (state, action) => {\n      state.token = null;\n      state.isAuthenticated = false;\n      state.loading = false;\n      state.error = action.payload;\n    })\n\n    // Update profile\n    .addCase(updateProfile.pending, state => {\n      state.loading = true;\n    }).addCase(updateProfile.fulfilled, (state, action) => {\n      state.loading = false;\n      state.user = action.payload;\n    }).addCase(updateProfile.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport const {\n  logout,\n  clearError\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","setAuthToken","setAlert","loadUser","_","rejectWithValue","localStorage","token","res","get","data","err","removeItem","response","msg","register","formData","dispatch","post","type","errors","forEach","error","login","updateProfile","put","initialState","getItem","isAuthenticated","loading","user","authSlice","name","reducers","logout","state","clearError","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","setItem","actions","reducer"],"sources":["/home/ywvlfy/projects/waifuhospital/waifuhospital/frontend/src/features/auth/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { setAuthToken } from '../../utils/setAuthToken';\nimport { setAlert } from '../alerts/alertSlice';\n\n// Load user\nexport const loadUser = createAsyncThunk(\n  'auth/loadUser',\n  async (_, { rejectWithValue }) => {\n    try {\n      if (localStorage.token) {\n        setAuthToken(localStorage.token);\n      }\n      \n      const res = await axios.get('/api/users/profile');\n      return res.data;\n    } catch (err) {\n      localStorage.removeItem('token');\n      return rejectWithValue(err.response.data.msg || 'Failed to load user');\n    }\n  }\n);\n\n// Register user\nexport const register = createAsyncThunk(\n  'auth/register',\n  async (formData, { dispatch, rejectWithValue }) => {\n    try {\n      const res = await axios.post('/api/users/register', formData);\n      \n      dispatch(setAlert({\n        msg: 'Registration successful! You are now logged in.',\n        type: 'success'\n      }));\n      \n      return res.data;\n    } catch (err) {\n      const errors = err.response.data.errors;\n      \n      if (errors) {\n        errors.forEach(error => dispatch(setAlert({\n          msg: error.msg,\n          type: 'error'\n        })));\n      }\n      \n      return rejectWithValue(err.response.data.msg || 'Registration failed');\n    }\n  }\n);\n\n// Login user\nexport const login = createAsyncThunk(\n  'auth/login',\n  async (formData, { dispatch, rejectWithValue }) => {\n    try {\n      const res = await axios.post('/api/users/login', formData);\n      \n      dispatch(setAlert({\n        msg: 'Login successful!',\n        type: 'success'\n      }));\n      \n      return res.data;\n    } catch (err) {\n      dispatch(setAlert({\n        msg: err.response.data.msg || 'Invalid credentials',\n        type: 'error'\n      }));\n      \n      return rejectWithValue(err.response.data.msg || 'Login failed');\n    }\n  }\n);\n\n// Update profile\nexport const updateProfile = createAsyncThunk(\n  'auth/updateProfile',\n  async (formData, { dispatch, rejectWithValue }) => {\n    try {\n      const res = await axios.put('/api/users/profile', formData);\n      \n      dispatch(setAlert({\n        msg: 'Profile updated successfully!',\n        type: 'success'\n      }));\n      \n      return res.data;\n    } catch (err) {\n      dispatch(setAlert({\n        msg: err.response.data.msg || 'Failed to update profile',\n        type: 'error'\n      }));\n      \n      return rejectWithValue(err.response.data.msg || 'Update failed');\n    }\n  }\n);\n\n// Initial state\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: null,\n  loading: true,\n  user: null,\n  error: null\n};\n\n// Slice\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    logout: (state) => {\n      localStorage.removeItem('token');\n      state.token = null;\n      state.isAuthenticated = false;\n      state.loading = false;\n      state.user = null;\n    },\n    clearError: (state) => {\n      state.error = null;\n    }\n  },\n  extraReducers: (builder) => {\n    builder\n      // Load user\n      .addCase(loadUser.pending, (state) => {\n        state.loading = true;\n      })\n      .addCase(loadUser.fulfilled, (state, action) => {\n        state.isAuthenticated = true;\n        state.loading = false;\n        state.user = action.payload;\n      })\n      .addCase(loadUser.rejected, (state, action) => {\n        state.token = null;\n        state.isAuthenticated = false;\n        state.loading = false;\n        state.user = null;\n        state.error = action.payload;\n      })\n      \n      // Register\n      .addCase(register.pending, (state) => {\n        state.loading = true;\n      })\n      .addCase(register.fulfilled, (state, action) => {\n        state.token = action.payload.token;\n        state.isAuthenticated = true;\n        state.loading = false;\n        state.user = action.payload.user;\n        localStorage.setItem('token', action.payload.token);\n      })\n      .addCase(register.rejected, (state, action) => {\n        state.token = null;\n        state.isAuthenticated = false;\n        state.loading = false;\n        state.error = action.payload;\n      })\n      \n      // Login\n      .addCase(login.pending, (state) => {\n        state.loading = true;\n      })\n      .addCase(login.fulfilled, (state, action) => {\n        state.token = action.payload.token;\n        state.isAuthenticated = true;\n        state.loading = false;\n        localStorage.setItem('token', action.payload.token);\n      })\n      .addCase(login.rejected, (state, action) => {\n        state.token = null;\n        state.isAuthenticated = false;\n        state.loading = false;\n        state.error = action.payload;\n      })\n      \n      // Update profile\n      .addCase(updateProfile.pending, (state) => {\n        state.loading = true;\n      })\n      .addCase(updateProfile.fulfilled, (state, action) => {\n        state.loading = false;\n        state.user = action.payload;\n      })\n      .addCase(updateProfile.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload;\n      });\n  }\n});\n\nexport const { logout, clearError } = authSlice.actions;\n\nexport default authSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}