{"ast":null,"code":"var _jsxFileName = \"/home/ywvlfy/projects/waifuhospital/frontend/src/pages/CharacterChat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getCharacterById } from '../features/characters/characterSlice';\nimport axios from 'axios';\nimport Spinner from '../components/layout/Spinner';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: calc(100vh - 200px);\n  min-height: 500px;\n  background-color: white;\n  border-radius: 8px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  margin: 2rem 0;\n  overflow: hidden;\n`;\n_c = ChatContainer;\nconst ChatHeader = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 1rem;\n  background-color: var(--primary-color);\n  color: white;\n`;\n_c2 = ChatHeader;\nconst CharacterImage = styled.img`\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  margin-right: 1rem;\n  object-fit: cover;\n`;\n_c3 = CharacterImage;\nconst CharacterName = styled.h3`\n  margin: 0;\n  font-size: 1.2rem;\n`;\n_c4 = CharacterName;\nconst BackLink = styled(Link)`\n  margin-left: auto;\n  color: white;\n  text-decoration: none;\n  font-size: 0.9rem;\n  \n  &:hover {\n    text-decoration: underline;\n  }\n`;\n_c5 = BackLink;\nconst ChatBody = styled.div`\n  flex: 1;\n  padding: 1rem;\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  background-color: var(--light-bg);\n`;\n_c6 = ChatBody;\nconst MessageContainer = styled.div`\n  display: flex;\n  flex-direction: ${props => props.isUser ? 'row-reverse' : 'row'};\n  align-items: flex-start;\n  max-width: 80%;\n  align-self: ${props => props.isUser ? 'flex-end' : 'flex-start'};\n`;\n_c7 = MessageContainer;\nconst MessageBubble = styled.div`\n  padding: 0.8rem 1rem;\n  border-radius: 18px;\n  background-color: ${props => props.isUser ? 'var(--primary-color)' : 'white'};\n  color: ${props => props.isUser ? 'white' : 'var(--text-color)'};\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);\n  position: relative;\n  line-height: 1.4;\n`;\n_c8 = MessageBubble;\nconst AvatarContainer = styled.div`\n  width: 32px;\n  height: 32px;\n  margin: ${props => props.isUser ? '0 0 0 8px' : '0 8px 0 0'};\n`;\n_c9 = AvatarContainer;\nconst Avatar = styled.img`\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n  object-fit: cover;\n`;\n_c10 = Avatar;\nconst UserAvatar = styled.div`\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n  background-color: var(--primary-color);\n  color: white;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: 600;\n  font-size: 14px;\n`;\n_c11 = UserAvatar;\nconst ThinkingIndicator = styled.div`\n  display: flex;\n  padding: 0.5rem;\n  gap: 0.3rem;\n  align-items: center;\n  \n  span {\n    width: 8px;\n    height: 8px;\n    background-color: var(--light-text);\n    border-radius: 50%;\n    animation: pulse 1.5s infinite;\n    \n    &:nth-child(2) {\n      animation-delay: 0.2s;\n    }\n    \n    &:nth-child(3) {\n      animation-delay: 0.4s;\n    }\n  }\n  \n  @keyframes pulse {\n    0%, 100% {\n      opacity: 0.5;\n      transform: scale(1);\n    }\n    50% {\n      opacity: 1;\n      transform: scale(1.2);\n    }\n  }\n`;\n_c12 = ThinkingIndicator;\nconst ChatFooter = styled.div`\n  padding: 1rem;\n  border-top: 1px solid var(--border-color);\n  background-color: white;\n`;\n_c13 = ChatFooter;\nconst MessageForm = styled.form`\n  display: flex;\n  gap: 0.5rem;\n`;\n_c14 = MessageForm;\nconst MessageInput = styled.input`\n  flex: 1;\n  padding: 0.8rem 1rem;\n  border: 1px solid var(--border-color);\n  border-radius: 24px;\n  font-size: 1rem;\n  \n  &:focus {\n    outline: none;\n    border-color: var(--primary-color);\n  }\n`;\n_c15 = MessageInput;\nconst SendButton = styled.button`\n  background-color: var(--primary-color);\n  color: white;\n  border: none;\n  border-radius: 24px;\n  padding: 0 1.2rem;\n  font-weight: 500;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n  \n  &:hover {\n    background-color: var(--primary-dark);\n  }\n  \n  &:disabled {\n    background-color: #ccc;\n    cursor: not-allowed;\n  }\n`;\n_c16 = SendButton;\nconst EmptyChat = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  color: var(--light-text);\n  text-align: center;\n  padding: 2rem;\n`;\n_c17 = EmptyChat;\nconst EmptyTitle = styled.h3`\n  font-size: 1.2rem;\n  margin-bottom: 0.5rem;\n  color: var(--text-color);\n`;\n_c18 = EmptyTitle;\nconst EmptyText = styled.p`\n  max-width: 400px;\n`;\n_c19 = EmptyText;\nconst CharacterChat = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [message, setMessage] = useState('');\n  const [chat, setChat] = useState({\n    messages: []\n  });\n  const [loading, setLoading] = useState(true);\n  const [sending, setSending] = useState(false);\n  const chatBodyRef = useRef(null);\n  const dispatch = useDispatch();\n  const {\n    character,\n    loading: characterLoading\n  } = useSelector(state => state.character);\n  const {\n    user\n  } = useSelector(state => state.auth);\n  useEffect(() => {\n    dispatch(getCharacterById(id));\n\n    // Fetch chat history or create a new chat\n    const fetchChat = async () => {\n      try {\n        // In a real app, this would call the backend API\n        // For this MVP, we'll simulate it\n        setTimeout(() => {\n          setChat({\n            _id: 'chat_' + id,\n            character: id,\n            user: user === null || user === void 0 ? void 0 : user._id,\n            messages: []\n          });\n          setLoading(false);\n        }, 1000);\n      } catch (error) {\n        console.error('Error fetching chat:', error);\n        setLoading(false);\n      }\n    };\n    fetchChat();\n  }, [dispatch, id, user]);\n\n  // Scroll to bottom when messages change\n  useEffect(() => {\n    if (chatBodyRef.current) {\n      chatBodyRef.current.scrollTop = chatBodyRef.current.scrollHeight;\n    }\n  }, [chat.messages]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!message.trim()) return;\n\n    // Add user message to chat\n    const updatedMessages = [...chat.messages, {\n      sender: 'user',\n      content: message\n    }];\n    setChat(prev => ({\n      ...prev,\n      messages: updatedMessages\n    }));\n    setMessage('');\n    setSending(true);\n    try {\n      // Call the AI service API\n      const response = await axios.post('http://localhost:5000/api/chat', {\n        message: message,\n        characterId: id\n      });\n      if (response.data && response.data.response) {\n        setChat(prev => ({\n          ...prev,\n          messages: [...prev.messages, {\n            sender: 'character',\n            content: response.data.response\n          }]\n        }));\n      } else {\n        throw new Error('Invalid response from AI service');\n      }\n    } catch (error) {\n      console.error('Error sending message to AI service:', error);\n\n      // Fallback to static responses if AI service fails\n      const fallbackResponses = [`That's interesting! Tell me more about it.`, `I see. How does that make you feel?`, `Hmm, I never thought about it that way.`, `That's cool! I'd like to know more about you.`, `That sounds wonderful! What else do you enjoy?`, `Really? That's fascinating!`, `I understand. Let's talk more about that.`, `That's a good point. I appreciate your perspective.`, `Thanks for sharing that with me!`, `I'm glad you told me that. It helps me understand you better.`];\n      const fallbackResponse = fallbackResponses[Math.floor(Math.random() * fallbackResponses.length)];\n      setChat(prev => ({\n        ...prev,\n        messages: [...prev.messages, {\n          sender: 'character',\n          content: fallbackResponse\n        }]\n      }));\n    } finally {\n      setSending(false);\n    }\n  };\n  if (characterLoading || loading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 12\n    }, this);\n  }\n  if (!character) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Character not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(ChatContainer, {\n    children: [/*#__PURE__*/_jsxDEV(ChatHeader, {\n      children: [/*#__PURE__*/_jsxDEV(CharacterImage, {\n        src: character.imageUrl,\n        alt: character.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CharacterName, {\n        children: character.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BackLink, {\n        to: `/characters/${id}`,\n        children: \"Back to Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatBody, {\n      ref: chatBodyRef,\n      children: [chat.messages.length === 0 ? /*#__PURE__*/_jsxDEV(EmptyChat, {\n        children: [/*#__PURE__*/_jsxDEV(EmptyTitle, {\n          children: [\"Start Chatting with \", character.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(EmptyText, {\n          children: [\"Say hello to start a conversation! \", character.name, \" is excited to talk with you.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 11\n      }, this) : chat.messages.map((msg, index) => {\n        var _user$username;\n        return /*#__PURE__*/_jsxDEV(MessageContainer, {\n          isUser: msg.sender === 'user',\n          children: [/*#__PURE__*/_jsxDEV(AvatarContainer, {\n            isUser: msg.sender === 'user',\n            children: msg.sender === 'user' ? /*#__PURE__*/_jsxDEV(UserAvatar, {\n              children: (user === null || user === void 0 ? void 0 : (_user$username = user.username) === null || _user$username === void 0 ? void 0 : _user$username.charAt(0).toUpperCase()) || 'U'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Avatar, {\n              src: character.imageUrl,\n              alt: character.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MessageBubble, {\n            isUser: msg.sender === 'user',\n            children: msg.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 13\n        }, this);\n      }), sending && /*#__PURE__*/_jsxDEV(MessageContainer, {\n        children: [/*#__PURE__*/_jsxDEV(AvatarContainer, {\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            src: character.imageUrl,\n            alt: character.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ThinkingIndicator, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatFooter, {\n      children: /*#__PURE__*/_jsxDEV(MessageForm, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(MessageInput, {\n          type: \"text\",\n          placeholder: `Message ${character.name}...`,\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          disabled: sending\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SendButton, {\n          type: \"submit\",\n          disabled: sending || !message.trim(),\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 328,\n    columnNumber: 5\n  }, this);\n};\n_s(CharacterChat, \"D/S99CpPrR6fErbBmCMRSvSFoVQ=\", false, function () {\n  return [useParams, useDispatch, useSelector, useSelector];\n});\n_c20 = CharacterChat;\nexport default CharacterChat;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20;\n$RefreshReg$(_c, \"ChatContainer\");\n$RefreshReg$(_c2, \"ChatHeader\");\n$RefreshReg$(_c3, \"CharacterImage\");\n$RefreshReg$(_c4, \"CharacterName\");\n$RefreshReg$(_c5, \"BackLink\");\n$RefreshReg$(_c6, \"ChatBody\");\n$RefreshReg$(_c7, \"MessageContainer\");\n$RefreshReg$(_c8, \"MessageBubble\");\n$RefreshReg$(_c9, \"AvatarContainer\");\n$RefreshReg$(_c10, \"Avatar\");\n$RefreshReg$(_c11, \"UserAvatar\");\n$RefreshReg$(_c12, \"ThinkingIndicator\");\n$RefreshReg$(_c13, \"ChatFooter\");\n$RefreshReg$(_c14, \"MessageForm\");\n$RefreshReg$(_c15, \"MessageInput\");\n$RefreshReg$(_c16, \"SendButton\");\n$RefreshReg$(_c17, \"EmptyChat\");\n$RefreshReg$(_c18, \"EmptyTitle\");\n$RefreshReg$(_c19, \"EmptyText\");\n$RefreshReg$(_c20, \"CharacterChat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","Link","useDispatch","useSelector","getCharacterById","axios","Spinner","styled","jsxDEV","_jsxDEV","ChatContainer","div","_c","ChatHeader","_c2","CharacterImage","img","_c3","CharacterName","h3","_c4","BackLink","_c5","ChatBody","_c6","MessageContainer","props","isUser","_c7","MessageBubble","_c8","AvatarContainer","_c9","Avatar","_c10","UserAvatar","_c11","ThinkingIndicator","_c12","ChatFooter","_c13","MessageForm","form","_c14","MessageInput","input","_c15","SendButton","button","_c16","EmptyChat","_c17","EmptyTitle","_c18","EmptyText","p","_c19","CharacterChat","_s","id","message","setMessage","chat","setChat","messages","loading","setLoading","sending","setSending","chatBodyRef","dispatch","character","characterLoading","state","user","auth","fetchChat","setTimeout","_id","error","console","current","scrollTop","scrollHeight","handleSubmit","e","preventDefault","trim","updatedMessages","sender","content","prev","response","post","characterId","data","Error","fallbackResponses","fallbackResponse","Math","floor","random","length","fileName","_jsxFileName","lineNumber","columnNumber","children","src","imageUrl","alt","name","to","ref","map","msg","index","_user$username","username","charAt","toUpperCase","onSubmit","type","placeholder","value","onChange","target","disabled","_c20","$RefreshReg$"],"sources":["/home/ywvlfy/projects/waifuhospital/frontend/src/pages/CharacterChat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getCharacterById } from '../features/characters/characterSlice';\nimport axios from 'axios';\nimport Spinner from '../components/layout/Spinner';\nimport styled from 'styled-components';\n\nconst ChatContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: calc(100vh - 200px);\n  min-height: 500px;\n  background-color: white;\n  border-radius: 8px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  margin: 2rem 0;\n  overflow: hidden;\n`;\n\nconst ChatHeader = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 1rem;\n  background-color: var(--primary-color);\n  color: white;\n`;\n\nconst CharacterImage = styled.img`\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  margin-right: 1rem;\n  object-fit: cover;\n`;\n\nconst CharacterName = styled.h3`\n  margin: 0;\n  font-size: 1.2rem;\n`;\n\nconst BackLink = styled(Link)`\n  margin-left: auto;\n  color: white;\n  text-decoration: none;\n  font-size: 0.9rem;\n  \n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nconst ChatBody = styled.div`\n  flex: 1;\n  padding: 1rem;\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  background-color: var(--light-bg);\n`;\n\nconst MessageContainer = styled.div`\n  display: flex;\n  flex-direction: ${props => props.isUser ? 'row-reverse' : 'row'};\n  align-items: flex-start;\n  max-width: 80%;\n  align-self: ${props => props.isUser ? 'flex-end' : 'flex-start'};\n`;\n\nconst MessageBubble = styled.div`\n  padding: 0.8rem 1rem;\n  border-radius: 18px;\n  background-color: ${props => props.isUser ? 'var(--primary-color)' : 'white'};\n  color: ${props => props.isUser ? 'white' : 'var(--text-color)'};\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);\n  position: relative;\n  line-height: 1.4;\n`;\n\nconst AvatarContainer = styled.div`\n  width: 32px;\n  height: 32px;\n  margin: ${props => props.isUser ? '0 0 0 8px' : '0 8px 0 0'};\n`;\n\nconst Avatar = styled.img`\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n  object-fit: cover;\n`;\n\nconst UserAvatar = styled.div`\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n  background-color: var(--primary-color);\n  color: white;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: 600;\n  font-size: 14px;\n`;\n\nconst ThinkingIndicator = styled.div`\n  display: flex;\n  padding: 0.5rem;\n  gap: 0.3rem;\n  align-items: center;\n  \n  span {\n    width: 8px;\n    height: 8px;\n    background-color: var(--light-text);\n    border-radius: 50%;\n    animation: pulse 1.5s infinite;\n    \n    &:nth-child(2) {\n      animation-delay: 0.2s;\n    }\n    \n    &:nth-child(3) {\n      animation-delay: 0.4s;\n    }\n  }\n  \n  @keyframes pulse {\n    0%, 100% {\n      opacity: 0.5;\n      transform: scale(1);\n    }\n    50% {\n      opacity: 1;\n      transform: scale(1.2);\n    }\n  }\n`;\n\nconst ChatFooter = styled.div`\n  padding: 1rem;\n  border-top: 1px solid var(--border-color);\n  background-color: white;\n`;\n\nconst MessageForm = styled.form`\n  display: flex;\n  gap: 0.5rem;\n`;\n\nconst MessageInput = styled.input`\n  flex: 1;\n  padding: 0.8rem 1rem;\n  border: 1px solid var(--border-color);\n  border-radius: 24px;\n  font-size: 1rem;\n  \n  &:focus {\n    outline: none;\n    border-color: var(--primary-color);\n  }\n`;\n\nconst SendButton = styled.button`\n  background-color: var(--primary-color);\n  color: white;\n  border: none;\n  border-radius: 24px;\n  padding: 0 1.2rem;\n  font-weight: 500;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n  \n  &:hover {\n    background-color: var(--primary-dark);\n  }\n  \n  &:disabled {\n    background-color: #ccc;\n    cursor: not-allowed;\n  }\n`;\n\nconst EmptyChat = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  color: var(--light-text);\n  text-align: center;\n  padding: 2rem;\n`;\n\nconst EmptyTitle = styled.h3`\n  font-size: 1.2rem;\n  margin-bottom: 0.5rem;\n  color: var(--text-color);\n`;\n\nconst EmptyText = styled.p`\n  max-width: 400px;\n`;\n\nconst CharacterChat = () => {\n  const { id } = useParams();\n  const [message, setMessage] = useState('');\n  const [chat, setChat] = useState({ messages: [] });\n  const [loading, setLoading] = useState(true);\n  const [sending, setSending] = useState(false);\n  const chatBodyRef = useRef(null);\n  \n  const dispatch = useDispatch();\n  const { character, loading: characterLoading } = useSelector(state => state.character);\n  const { user } = useSelector(state => state.auth);\n  \n  useEffect(() => {\n    dispatch(getCharacterById(id));\n    \n    // Fetch chat history or create a new chat\n    const fetchChat = async () => {\n      try {\n        // In a real app, this would call the backend API\n        // For this MVP, we'll simulate it\n        setTimeout(() => {\n          setChat({\n            _id: 'chat_' + id,\n            character: id,\n            user: user?._id,\n            messages: []\n          });\n          setLoading(false);\n        }, 1000);\n      } catch (error) {\n        console.error('Error fetching chat:', error);\n        setLoading(false);\n      }\n    };\n    \n    fetchChat();\n  }, [dispatch, id, user]);\n  \n  // Scroll to bottom when messages change\n  useEffect(() => {\n    if (chatBodyRef.current) {\n      chatBodyRef.current.scrollTop = chatBodyRef.current.scrollHeight;\n    }\n  }, [chat.messages]);\n  \n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!message.trim()) return;\n    \n    // Add user message to chat\n    const updatedMessages = [\n      ...chat.messages,\n      { sender: 'user', content: message }\n    ];\n    \n    setChat(prev => ({\n      ...prev,\n      messages: updatedMessages\n    }));\n    \n    setMessage('');\n    setSending(true);\n    \n    try {\n      // Call the AI service API\n      const response = await axios.post('http://localhost:5000/api/chat', {\n        message: message,\n        characterId: id\n      });\n      \n      if (response.data && response.data.response) {\n        setChat(prev => ({\n          ...prev,\n          messages: [\n            ...prev.messages,\n            { sender: 'character', content: response.data.response }\n          ]\n        }));\n      } else {\n        throw new Error('Invalid response from AI service');\n      }\n    } catch (error) {\n      console.error('Error sending message to AI service:', error);\n      \n      // Fallback to static responses if AI service fails\n      const fallbackResponses = [\n        `That's interesting! Tell me more about it.`,\n        `I see. How does that make you feel?`,\n        `Hmm, I never thought about it that way.`,\n        `That's cool! I'd like to know more about you.`,\n        `That sounds wonderful! What else do you enjoy?`,\n        `Really? That's fascinating!`,\n        `I understand. Let's talk more about that.`,\n        `That's a good point. I appreciate your perspective.`,\n        `Thanks for sharing that with me!`,\n        `I'm glad you told me that. It helps me understand you better.`\n      ];\n      \n      const fallbackResponse = fallbackResponses[Math.floor(Math.random() * fallbackResponses.length)];\n      \n      setChat(prev => ({\n        ...prev,\n        messages: [\n          ...prev.messages,\n          { sender: 'character', content: fallbackResponse }\n        ]\n      }));\n    } finally {\n      setSending(false);\n    }\n  };\n  \n  if (characterLoading || loading) {\n    return <Spinner />;\n  }\n  \n  if (!character) {\n    return <div>Character not found</div>;\n  }\n  \n  return (\n    <ChatContainer>\n      <ChatHeader>\n        <CharacterImage src={character.imageUrl} alt={character.name} />\n        <CharacterName>{character.name}</CharacterName>\n        <BackLink to={`/characters/${id}`}>Back to Profile</BackLink>\n      </ChatHeader>\n      \n      <ChatBody ref={chatBodyRef}>\n        {chat.messages.length === 0 ? (\n          <EmptyChat>\n            <EmptyTitle>Start Chatting with {character.name}</EmptyTitle>\n            <EmptyText>\n              Say hello to start a conversation! {character.name} is excited to talk with you.\n            </EmptyText>\n          </EmptyChat>\n        ) : (\n          chat.messages.map((msg, index) => (\n            <MessageContainer key={index} isUser={msg.sender === 'user'}>\n              <AvatarContainer isUser={msg.sender === 'user'}>\n                {msg.sender === 'user' ? (\n                  <UserAvatar>\n                    {user?.username?.charAt(0).toUpperCase() || 'U'}\n                  </UserAvatar>\n                ) : (\n                  <Avatar src={character.imageUrl} alt={character.name} />\n                )}\n              </AvatarContainer>\n              <MessageBubble isUser={msg.sender === 'user'}>\n                {msg.content}\n              </MessageBubble>\n            </MessageContainer>\n          ))\n        )}\n        \n        {sending && (\n          <MessageContainer>\n            <AvatarContainer>\n              <Avatar src={character.imageUrl} alt={character.name} />\n            </AvatarContainer>\n            <ThinkingIndicator>\n              <span></span>\n              <span></span>\n              <span></span>\n            </ThinkingIndicator>\n          </MessageContainer>\n        )}\n      </ChatBody>\n      \n      <ChatFooter>\n        <MessageForm onSubmit={handleSubmit}>\n          <MessageInput\n            type=\"text\"\n            placeholder={`Message ${character.name}...`}\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n            disabled={sending}\n          />\n          <SendButton type=\"submit\" disabled={sending || !message.trim()}>\n            Send\n          </SendButton>\n        </MessageForm>\n      </ChatFooter>\n    </ChatContainer>\n  );\n};\n\nexport default CharacterChat;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,SAAS,EAAEC,IAAI,QAAQ,kBAAkB;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,gBAAgB,QAAQ,uCAAuC;AACxE,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,8BAA8B;AAClD,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,aAAa,GAAGH,MAAM,CAACI,GAAG;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAVIF,aAAa;AAYnB,MAAMG,UAAU,GAAGN,MAAM,CAACI,GAAG;AAC7B;AACA;AACA;AACA;AACA;AACA,CAAC;AAACG,GAAA,GANID,UAAU;AAQhB,MAAME,cAAc,GAAGR,MAAM,CAACS,GAAG;AACjC;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GANIF,cAAc;AAQpB,MAAMG,aAAa,GAAGX,MAAM,CAACY,EAAE;AAC/B;AACA;AACA,CAAC;AAACC,GAAA,GAHIF,aAAa;AAKnB,MAAMG,QAAQ,GAAGd,MAAM,CAACN,IAAI,CAAC;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACqB,GAAA,GATID,QAAQ;AAWd,MAAME,QAAQ,GAAGhB,MAAM,CAACI,GAAG;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACa,GAAA,GARID,QAAQ;AAUd,MAAME,gBAAgB,GAAGlB,MAAM,CAACI,GAAG;AACnC;AACA,oBAAoBe,KAAK,IAAIA,KAAK,CAACC,MAAM,GAAG,aAAa,GAAG,KAAK;AACjE;AACA;AACA,gBAAgBD,KAAK,IAAIA,KAAK,CAACC,MAAM,GAAG,UAAU,GAAG,YAAY;AACjE,CAAC;AAACC,GAAA,GANIH,gBAAgB;AAQtB,MAAMI,aAAa,GAAGtB,MAAM,CAACI,GAAG;AAChC;AACA;AACA,sBAAsBe,KAAK,IAAIA,KAAK,CAACC,MAAM,GAAG,sBAAsB,GAAG,OAAO;AAC9E,WAAWD,KAAK,IAAIA,KAAK,CAACC,MAAM,GAAG,OAAO,GAAG,mBAAmB;AAChE;AACA;AACA;AACA,CAAC;AAACG,GAAA,GARID,aAAa;AAUnB,MAAME,eAAe,GAAGxB,MAAM,CAACI,GAAG;AAClC;AACA;AACA,YAAYe,KAAK,IAAIA,KAAK,CAACC,MAAM,GAAG,WAAW,GAAG,WAAW;AAC7D,CAAC;AAACK,GAAA,GAJID,eAAe;AAMrB,MAAME,MAAM,GAAG1B,MAAM,CAACS,GAAG;AACzB;AACA;AACA;AACA;AACA,CAAC;AAACkB,IAAA,GALID,MAAM;AAOZ,MAAME,UAAU,GAAG5B,MAAM,CAACI,GAAG;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACyB,IAAA,GAXID,UAAU;AAahB,MAAME,iBAAiB,GAAG9B,MAAM,CAACI,GAAG;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC2B,IAAA,GAhCID,iBAAiB;AAkCvB,MAAME,UAAU,GAAGhC,MAAM,CAACI,GAAG;AAC7B;AACA;AACA;AACA,CAAC;AAAC6B,IAAA,GAJID,UAAU;AAMhB,MAAME,WAAW,GAAGlC,MAAM,CAACmC,IAAI;AAC/B;AACA;AACA,CAAC;AAACC,IAAA,GAHIF,WAAW;AAKjB,MAAMG,YAAY,GAAGrC,MAAM,CAACsC,KAAK;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,IAAA,GAXIF,YAAY;AAalB,MAAMG,UAAU,GAAGxC,MAAM,CAACyC,MAAM;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,IAAA,GAlBIF,UAAU;AAoBhB,MAAMG,S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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}